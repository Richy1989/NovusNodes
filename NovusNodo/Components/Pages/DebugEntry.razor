@using Blazor.JsonEditor.Component
@using System.Text.Json.Nodes
@using System.Text.Json
@inject IJSRuntime JS
@inject ILogger<DebugEntry> Logger

<MudPaper Width="100%">
    <MudCardContent>
        <MudText Typo="Typo.subtitle2">@Timestamp.ToString("g")</MudText>
        <MudText Typo="Typo.body2" Color="Color.Secondary">@Tag</MudText>

        <div id="@string.Format("{0}", MessageID)"></div>

    </MudCardContent>
</MudPaper>

<style>


    @string.Format("#{0}", MessageID)
    {
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    }
</style>

@code {
    [Parameter] public DateTime Timestamp { get; set; }
    [Parameter] public string Tag { get; set; }
    [Parameter] public string MessageID { get; set; }
    [Parameter] public JsonObject Message { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var module = await JS.InvokeAsync<IJSObjectReference>("import", "./JSFolder/JsonEditor.js");
            try
            {
                await module.InvokeVoidAsync("JsonEditorCreateEditor", [$"{MessageID}", $"{Message}"]);
            }
            catch (Exception ex)
            {
                Logger.LogError(ex, $"Error in creting the Json Editor for debug entry {MessageID}");
            }
        }
    }
}
