@using Blazor.JsonEditor.Component
@using System.Text.Json.Nodes
@using System.Text.Json
@inject IJSRuntime JS
@inject ILogger<DebugEntry> Logger


<MudContainer>
    <MudText Typo="Typo.subtitle2">@Timestamp.ToString("g")</MudText>
    <MudText Typo="Typo.body2" Color="Color.Secondary">@Tag</MudText>
    <div id="@string.Format("{0}", MessageID)" style="min-height:150px;"></div>
</MudContainer>

@code {
    [Parameter] public DateTime Timestamp { get; set; }
    [Parameter] public string Tag { get; set; }
    [Parameter] public string MessageID { get; set; }
    [Parameter] public JsonObject Message { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var module = await JS.InvokeAsync<IJSObjectReference>("import", "./JSFolder/JsonEditor.js");
        try
        {
            await module.InvokeVoidAsync("JsonEditorCreateEditor", [$"{MessageID}", $"{Message}"]);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, $"Error in creating the Json Editor for debug entry {MessageID}");
        }
    }
}
