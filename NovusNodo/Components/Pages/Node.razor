@using NovusNodoCore.NodeDefinition
@using NovusNodoPluginLibrary
@inject IJSRuntime JS;

<div class="draggable" id="@ID" style="background-color:@BackgroundColorCss">
    <div class="node-header">@Name</div>
    <div class="node-body">@ChildContent</div>
</div>

@code
{
    [Parameter] public INodeBase? NodeBase { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; } // For additional content

    private string BackgroundColorCss { get; set; } = ConvertColorToCSSColor(System.Drawing.Color.Violet);
    private string Name = "Not Defined";
    private string ID = "Default";


    protected override void OnInitialized()
    {
        if (NodeBase == null) return;
        BackgroundColorCss = ConvertColorToCSSColor(NodeBase.Background);
        Name = NodeBase.Name;
        ID = NodeBase.ID;
    }

    public static string ConvertColorToCSSColor(System.Drawing.Color color)
    {
        return $"#{color.R:X2}{color.G:X2}{color.B:X2}";
    }

    /// <summary>
    /// Method called after the component has rendered.
    /// </summary>
    /// <param name="firstRender">Indicates if this is the first render.</param>
    /// <returns>A task that represents the asynchronous operation.</returns>
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // if (NodeBase == null) return;
        await Task.CompletedTask;
    }
}