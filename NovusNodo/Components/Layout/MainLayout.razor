@using NovusNodo.Components.Pages
@inherits LayoutComponentBase
@inject NovusNodo.Management.NovusUIManagement NovusUIManagement
@inject NovusNodoCore.Managers.ExecutionManager ExecutionManager
@inject IJSRuntime JS
@inject ILoggerFactory LoggerFactory
@inject IScrollManager ScrollManager

<MudThemeProvider Theme="@_theme" IsDarkMode="NovusUIManagement.IsDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Novus Nodes</MudText>
        <MudSpacer />
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.End" OnClick="@((e) => SettingsDrawerToggle())" />
    </MudAppBar>
    <MudDrawer @bind-Open="NovusUIManagement.DrawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudDrawer @bind-Open="NovusUIManagement.SettingsDrawerOpen" Class="custom-drawer" Width="440px" Anchor="Anchor.End" ClipMode="DrawerClipMode.Docked" Variant="DrawerVariant.Persistent" Elevation="2">
        <MudContainer Class="pa-0 d-flex align-start flex-grow-1" Style="width: 100%; height:100%;" MaxWidth="MaxWidth.False">
            <MudContainer Class="pa-0" style="width:100%; height:100%">
                <MudTabs Rounded="true" PanelClass="pa-0 flex-grow-1 overflow-x-auto" MinimumTabWidth="20px" Style="height:100%;">
                    <MudTabPanel Icon="@Icons.Material.Filled.History">
                        <MudContainer Class="pa-0 d-flex flex-column flex-grow-1" Style="width: 100%; height:100%;" MaxWidth="MaxWidth.False">
                            <div style="display: flex; flex-direction: row;  justify-content: space-around; ">
                                <MudButton Onclick="ClearDebugLog" Variant="Variant.Outlined" EndIcon="@Icons.Material.Filled.ClearAll" Color="Color.Primary" FullWidth="true">Clear Debug Log</MudButton>
                                <MudSwitch @bind-Value="autoScrollDebugWindow" Style="padding-left:10px;" Color="Color.Primary" Label="Auto Scroll" UncheckedColor="Color.Warning" />
                            </div>
                            <MudContainer Class="scrollable-drawer-content pa-0 d-flex flex-column overflow-x-auto" Style="width: 100%; height:100%;" MaxWidth="MaxWidth.False">
                                @foreach (var debug in ExecutionManager.DebugLog)
                                {
                                    <DebugEntry Timestamp="DateTime.Now" MessageID="@debug.Key" Tag="Info" Message="@debug.Value"></DebugEntry>
                                }
                            </MudContainer>
                        </MudContainer>
                    </MudTabPanel>
                </MudTabs>
            </MudContainer>
        </MudContainer>
    </MudDrawer>

    <MudMainContent Style="height: 100vh">
        @Body
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>